Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';'

    3 optional_variable: optional_variable variable
    4                  | %empty

    5 variable: IDENTIFIER ':' type IS statement_

    6 optional_parameter: parameters
    7                   | %empty

    8 parameters: parameter ',' parameters
    9           | parameter

   10 parameter: IDENTIFIER ':' type

   11 type: INTEGER
   12     | REAL
   13     | BOOLEAN

   14 body: BEGIN_ statement_ END ';'

   15 statement_: statement ';'
   16           | error ';'

   17 statement: expression
   18          | REDUCE operator reductions ENDREDUCE
   19          | IF expression THEN statement_ ELSE statement_ ENDIF
   20          | CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE

   21 optional_cases: optional_cases case
   22               | %empty

   23 case: WHEN INT_LITERAL ARROW statement_

   24 operator: RELOP
   25         | ADDOP
   26         | MULOP REMOP
   27         | EXPOP

   28 reductions: reductions statement_
   29           | %empty

   30 expression: expression OROP conjuct
   31           | conjuct

   32 conjuct: conjuct ANDOP relation
   33        | relation

   34 relation: relation RELOP term
   35         | term

   36 term: term ADDOP factor
   37     | factor

   38 factor: factor MULOP power
   39       | factor REMOP power
   40       | power

   41 power: negation EXPOP power
   42      | negation

   43 negation: NOTOP primary
   44         | primary

   45 primary: '(' expression ')'
   46        | INT_LITERAL
   47        | REAL_LITERAL
   48        | BOOL_LITERAL
   49        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 45
')' (41) 45
',' (44) 8
':' (58) 5 10
';' (59) 2 14 15 16
error (256) 16
IDENTIFIER <iden> (258) 2 5 10 49
INT_LITERAL <value> (259) 23 46
REAL_LITERAL <value> (260) 47
BOOL_LITERAL <value> (261) 48
ADDOP <oper> (262) 25 36
MULOP <oper> (263) 26 38
RELOP <oper> (264) 24 34
EXPOP <oper> (265) 27 41
REMOP <oper> (266) 26 39
ANDOP (267) 32
OROP (268) 30
NOTOP (269) 43
BEGIN_ (270) 14
BOOLEAN (271) 13
END (272) 14
ENDREDUCE (273) 18
FUNCTION (274) 2
INTEGER (275) 11
IS (276) 5 20
REDUCE (277) 18
RETURNS (278) 2
CASE (279) 20
ELSE (280) 19
ARROW (281) 20 23
ENDCASE (282) 20
ENDIF (283) 19
IF (284) 19
OTHERS (285) 20
REAL (286) 12
THEN (287) 19
WHEN (288) 23


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header (41)
    on left: 2, on right: 1
optional_variable (42)
    on left: 3 4, on right: 1 3
variable (43)
    on left: 5, on right: 3
optional_parameter (44)
    on left: 6 7, on right: 2
parameters (45)
    on left: 8 9, on right: 6 8
parameter (46)
    on left: 10, on right: 8 9
type (47)
    on left: 11 12 13, on right: 2 5 10
body <value> (48)
    on left: 14, on right: 1
statement_ <value> (49)
    on left: 15 16, on right: 5 14 19 20 23 28
statement <value> (50)
    on left: 17 18 19 20, on right: 15
optional_cases (51)
    on left: 21 22, on right: 20 21
case (52)
    on left: 23, on right: 21
operator <oper> (53)
    on left: 24 25 26 27, on right: 18
reductions <value> (54)
    on left: 28 29, on right: 18 28
expression <value> (55)
    on left: 30 31, on right: 17 19 20 30 45
conjuct <value> (56)
    on left: 32 33, on right: 30 31 32
relation <value> (57)
    on left: 34 35, on right: 32 33 34
term <value> (58)
    on left: 36 37, on right: 34 35 36
factor <value> (59)
    on left: 38 39 40, on right: 36 37 38 39
power <value> (60)
    on left: 41 42, on right: 38 39 40 41
negation <value> (61)
    on left: 43 44, on right: 41 42
primary <value> (62)
    on left: 45 46 47 48 49, on right: 43 44


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . optional_variable body

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER . optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 7 (optional_parameter)

    optional_parameter  go to state 8
    parameters          go to state 9
    parameter           go to state 10


State 5

    0 $accept: function $end .

    $default  accept


State 6

    1 function: function_header optional_variable . body
    3 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 11
    BEGIN_      shift, and go to state 12

    variable  go to state 13
    body      go to state 14


State 7

   10 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 15


State 8

    2 function_header: FUNCTION IDENTIFIER optional_parameter . RETURNS type ';'

    RETURNS  shift, and go to state 16


State 9

    6 optional_parameter: parameters .

    $default  reduce using rule 6 (optional_parameter)


State 10

    8 parameters: parameter . ',' parameters
    9           | parameter .

    ','  shift, and go to state 17

    $default  reduce using rule 9 (parameters)


State 11

    5 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 18


State 12

   14 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    IF            shift, and go to state 27
    '('           shift, and go to state 28

    statement_  go to state 29
    statement   go to state 30
    expression  go to state 31
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 13

    3 optional_variable: optional_variable variable .

    $default  reduce using rule 3 (optional_variable)


State 14

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 15

   10 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 39
    INTEGER  shift, and go to state 40
    REAL     shift, and go to state 41

    type  go to state 42


State 16

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS . type ';'

    BOOLEAN  shift, and go to state 39
    INTEGER  shift, and go to state 40
    REAL     shift, and go to state 41

    type  go to state 43


State 17

    8 parameters: parameter ',' . parameters

    IDENTIFIER  shift, and go to state 7

    parameters  go to state 44
    parameter   go to state 10


State 18

    5 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 39
    INTEGER  shift, and go to state 40
    REAL     shift, and go to state 41

    type  go to state 45


State 19

   16 statement_: error . ';'

    ';'  shift, and go to state 46


State 20

   49 primary: IDENTIFIER .

    $default  reduce using rule 49 (primary)


State 21

   46 primary: INT_LITERAL .

    $default  reduce using rule 46 (primary)


State 22

   47 primary: REAL_LITERAL .

    $default  reduce using rule 47 (primary)


State 23

   48 primary: BOOL_LITERAL .

    $default  reduce using rule 48 (primary)


State 24

   43 negation: NOTOP . primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 28

    primary  go to state 47


State 25

   18 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    RELOP  shift, and go to state 50
    EXPOP  shift, and go to state 51

    operator  go to state 52


State 26

   20 statement: CASE . expression IS optional_cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    expression  go to state 53
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 27

   19 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    expression  go to state 54
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 28

   45 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    expression  go to state 55
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 29

   14 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 56


State 30

   15 statement_: statement . ';'

    ';'  shift, and go to state 57


State 31

   17 statement: expression .
   30 expression: expression . OROP conjuct

    OROP  shift, and go to state 58

    $default  reduce using rule 17 (statement)


State 32

   31 expression: conjuct .
   32 conjuct: conjuct . ANDOP relation

    ANDOP  shift, and go to state 59

    $default  reduce using rule 31 (expression)


State 33

   33 conjuct: relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 60

    $default  reduce using rule 33 (conjuct)


State 34

   35 relation: term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 61

    $default  reduce using rule 35 (relation)


State 35

   37 term: factor .
   38 factor: factor . MULOP power
   39       | factor . REMOP power

    MULOP  shift, and go to state 62
    REMOP  shift, and go to state 63

    $default  reduce using rule 37 (term)


State 36

   40 factor: power .

    $default  reduce using rule 40 (factor)


State 37

   41 power: negation . EXPOP power
   42      | negation .

    EXPOP  shift, and go to state 64

    $default  reduce using rule 42 (power)


State 38

   44 negation: primary .

    $default  reduce using rule 44 (negation)


State 39

   13 type: BOOLEAN .

    $default  reduce using rule 13 (type)


State 40

   11 type: INTEGER .

    $default  reduce using rule 11 (type)


State 41

   12 type: REAL .

    $default  reduce using rule 12 (type)


State 42

   10 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 10 (parameter)


State 43

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type . ';'

    ';'  shift, and go to state 65


State 44

    8 parameters: parameter ',' parameters .

    $default  reduce using rule 8 (parameters)


State 45

    5 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 66


State 46

   16 statement_: error ';' .

    $default  reduce using rule 16 (statement_)


State 47

   43 negation: NOTOP primary .

    $default  reduce using rule 43 (negation)


State 48

   25 operator: ADDOP .

    $default  reduce using rule 25 (operator)


State 49

   26 operator: MULOP . REMOP

    REMOP  shift, and go to state 67


State 50

   24 operator: RELOP .

    $default  reduce using rule 24 (operator)


State 51

   27 operator: EXPOP .

    $default  reduce using rule 27 (operator)


State 52

   18 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 29 (reductions)

    reductions  go to state 68


State 53

   20 statement: CASE expression . IS optional_cases OTHERS ARROW statement_ ENDCASE
   30 expression: expression . OROP conjuct

    OROP  shift, and go to state 58
    IS    shift, and go to state 69


State 54

   19 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   30 expression: expression . OROP conjuct

    OROP  shift, and go to state 58
    THEN  shift, and go to state 70


State 55

   30 expression: expression . OROP conjuct
   45 primary: '(' expression . ')'

    OROP  shift, and go to state 58
    ')'   shift, and go to state 71


State 56

   14 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 72


State 57

   15 statement_: statement ';' .

    $default  reduce using rule 15 (statement_)


State 58

   30 expression: expression OROP . conjuct

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    conjuct   go to state 73
    relation  go to state 33
    term      go to state 34
    factor    go to state 35
    power     go to state 36
    negation  go to state 37
    primary   go to state 38


State 59

   32 conjuct: conjuct ANDOP . relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    relation  go to state 74
    term      go to state 34
    factor    go to state 35
    power     go to state 36
    negation  go to state 37
    primary   go to state 38


State 60

   34 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    term      go to state 75
    factor    go to state 35
    power     go to state 36
    negation  go to state 37
    primary   go to state 38


State 61

   36 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    factor    go to state 76
    power     go to state 36
    negation  go to state 37
    primary   go to state 38


State 62

   38 factor: factor MULOP . power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    power     go to state 77
    negation  go to state 37
    primary   go to state 38


State 63

   39 factor: factor REMOP . power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    power     go to state 78
    negation  go to state 37
    primary   go to state 38


State 64

   41 power: negation EXPOP . power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    '('           shift, and go to state 28

    power     go to state 79
    negation  go to state 37
    primary   go to state 38


State 65

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 66

    5 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    IF            shift, and go to state 27
    '('           shift, and go to state 28

    statement_  go to state 80
    statement   go to state 30
    expression  go to state 31
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 67

   26 operator: MULOP REMOP .

    $default  reduce using rule 26 (operator)


State 68

   18 statement: REDUCE operator reductions . ENDREDUCE
   28 reductions: reductions . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    ENDREDUCE     shift, and go to state 81
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    IF            shift, and go to state 27
    '('           shift, and go to state 28

    statement_  go to state 82
    statement   go to state 30
    expression  go to state 31
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 69

   20 statement: CASE expression IS . optional_cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 22 (optional_cases)

    optional_cases  go to state 83


State 70

   19 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    IF            shift, and go to state 27
    '('           shift, and go to state 28

    statement_  go to state 84
    statement   go to state 30
    expression  go to state 31
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 71

   45 primary: '(' expression ')' .

    $default  reduce using rule 45 (primary)


State 72

   14 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 14 (body)


State 73

   30 expression: expression OROP conjuct .
   32 conjuct: conjuct . ANDOP relation

    ANDOP  shift, and go to state 59

    $default  reduce using rule 30 (expression)


State 74

   32 conjuct: conjuct ANDOP relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 60

    $default  reduce using rule 32 (conjuct)


State 75

   34 relation: relation RELOP term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 61

    $default  reduce using rule 34 (relation)


State 76

   36 term: term ADDOP factor .
   38 factor: factor . MULOP power
   39       | factor . REMOP power

    MULOP  shift, and go to state 62
    REMOP  shift, and go to state 63

    $default  reduce using rule 36 (term)


State 77

   38 factor: factor MULOP power .

    $default  reduce using rule 38 (factor)


State 78

   39 factor: factor REMOP power .

    $default  reduce using rule 39 (factor)


State 79

   41 power: negation EXPOP power .

    $default  reduce using rule 41 (power)


State 80

    5 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 5 (variable)


State 81

   18 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 18 (statement)


State 82

   28 reductions: reductions statement_ .

    $default  reduce using rule 28 (reductions)


State 83

   20 statement: CASE expression IS optional_cases . OTHERS ARROW statement_ ENDCASE
   21 optional_cases: optional_cases . case

    OTHERS  shift, and go to state 85
    WHEN    shift, and go to state 86

    case  go to state 87


State 84

   19 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 88


State 85

   20 statement: CASE expression IS optional_cases OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 89


State 86

   23 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 90


State 87

   21 optional_cases: optional_cases case .

    $default  reduce using rule 21 (optional_cases)


State 88

   19 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    IF            shift, and go to state 27
    '('           shift, and go to state 28

    statement_  go to state 91
    statement   go to state 30
    expression  go to state 31
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 89

   20 statement: CASE expression IS optional_cases OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    IF            shift, and go to state 27
    '('           shift, and go to state 28

    statement_  go to state 92
    statement   go to state 30
    expression  go to state 31
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 90

   23 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 93


State 91

   19 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 94


State 92

   20 statement: CASE expression IS optional_cases OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 95


State 93

   23 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    REDUCE        shift, and go to state 25
    CASE          shift, and go to state 26
    IF            shift, and go to state 27
    '('           shift, and go to state 28

    statement_  go to state 96
    statement   go to state 30
    expression  go to state 31
    conjuct     go to state 32
    relation    go to state 33
    term        go to state 34
    factor      go to state 35
    power       go to state 36
    negation    go to state 37
    primary     go to state 38


State 94

   19 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 19 (statement)


State 95

   20 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 20 (statement)


State 96

   23 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 23 (case)
